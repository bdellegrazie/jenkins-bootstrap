---
version: '3.8'

services:
  alertmanager:
    image: 'prom/alertmanager:v0.21.0'
    container_name: 'alertmanager'
    command:
      - --config.file=/etc/alertmanager/config.yml
      - --storage.path=/alertmanager
      - --cluster.listen-address=
    volumes:
      - 'alertmanager-data:/alertmanager'
      - './alertmanager/:/etc/alertmanager/:ro'
    ports:
      - '${ALERTMANAGER_PORT}:9093'
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:9093/-/ready || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  cadvisor:
    image: 'gcr.io/cadvisor/cadvisor:latest'
    container_name: 'cadvisor'
    privileged: true
    expose:
      - '8080'
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:ro'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker/:ro'
      - '/dev/disk/:/dev/disk:ro'
    devices:
      - '/dev/kmsg:/dev/kmsg'
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:8080/containers/ || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  grafana:
    image: 'grafana/grafana:7.4.1'
    container_name: 'grafana'
    volumes:
      - 'grafana-data:/var/lib/grafana'
      - './grafana/provisioning:/etc/grafana/provisioning:ro'
    environment:
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: 'camptocamp-prometheus-alertmanager-datasource'
      GF_INSTALL_PLUGINS: 'camptocamp-prometheus-alertmanager-datasource'
      GF_LOG_MODE: 'console'
      GF_LOG_LEVEL: 'info'
      GF_ANALYTICS_REPORTING_ENABLED: 'false'
      GF_ANALYTICS_CHECK_FOR_UPDATES: 'false'
      # Disable all login prompts and security features
      # !!! THIS IS ONLY SUITABLE FOR LOCAL TESTING !!!
      GF_SECURITY_DISABLE_GRAVATAR: 'true'
      GF_AUTH_DISABLE_LOGIN_FORM: 'true'
      GF_AUTH_DISABLE_SIGNOUT_MENU: 'true'
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
      GF_AUTH_ANONYMOUS_ORG_ROLE: 'Admin'
      GF_AUTH_BASIC_ENABLED: 'true'
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_RENDERING_SERVER_URL: 'http://renderer:8080/render'
      GF_RENDERING_CALLBACK_URL: 'http://grafana:3000/'
      #GF_LOG_FILTERS: 'rendering:debug'
    ports:
      - '${GRAFANA_PORT}:3000'
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:3000/api/health || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  prometheus:
    image: 'prom/prometheus:v2.24.1'
    container_name: 'prometheus'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.listen-address=0.0.0.0:9090'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    secrets:
      - nexus_admin
    volumes:
      - 'prometheus-data:/prometheus'
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro'
    ports:
      - '${PROMETHEUS_PORT}:9090'
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:9090/-/ready || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  renderer:
    image: 'grafana/grafana-image-renderer:2.0.1'
    container_name: 'renderer'
    expose:
      - '8081'
    environment:
      BROWSER_TZ: 'Europe/London'
      ENABLE_METRICS: 'true'
      IGNORE_HTTPS_ERROR: 'true'
      LOG_LEVEL: 'info'
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:8081/metrics || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # exporter can double as statsd daemon
  # Intent was to get job metrics but not required if using the Prometheus plugin
  statsd:
    image: 'prom/statsd-exporter:v0.19.1'
    container_name: 'statsd'
    command:
      - --web.enable-lifecycle
      - --statsd.mapping-config=/tmp/statsd_mapping.yml
    volumes:
      - './statsd/statsd_mapping.yml:/tmp/statsd_mapping.yml'
    expose:
      - '9102'
      - '9125'
      - '9125/udp'
    ports:
      - '9102:9102'
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:9102/ || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
volumes:
  alertmanager-data:
  grafana-data:
  prometheus-data:

secrets:
  nexus_admin:
    file: './nexus/admin.secret'
