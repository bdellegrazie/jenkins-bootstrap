---
version: '3.7'

services:
  alertmanager:
    image: 'prom/alertmanager:v0.20.0'
    container_name: 'alertmanager'
    command:
      - --config.file=/etc/alertmanager/config.yml
      - --storage.path=/alertmanager
      - --cluster.listen-address=
    volumes:
      - 'alertmanager-data:/alertmanager'
      - './alertmanager/:/etc/alertmanager/:ro'
    ports:
      - '9093:9093'
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:9093/-/ready || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  cadvisor:
    image: 'google/cadvisor:latest'
    container_name: 'cadvisor'
    privileged: true
    command:
      - '-port'
      - '8082'
      - '-containerd'
      - '/var/run/containerd/containerd.sock'
      - '-logtostderr'
    ports:
      - '8082:8082'
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:ro'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker/:ro'
      - '/dev/disk/:/dev/disk:ro'
      - '/dev/kmsg:/dev/kmsg:ro'
    healthcheck:
      test: 'wget -q --spider --method=HEAD http://127.0.0.1:8082/containers/ || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  grafana:
    image: 'grafana/grafana:7.0.2'
    container_name: 'grafana'
    volumes:
      - 'grafana-data:/var/lib/grafana'
      - './grafana/provisioning:/etc/grafana/provisioning:ro'
    environment:
      GF_INSTALL_PLUGINS: 'camptocamp-prometheus-alertmanager-datasource'
      GF_SERVER_HTTP_PORT: '3000'
      GF_LOG_MODE: 'console'
      GF_LOG_LEVEL: 'info'
      GF_ANALYTICS_REPORTING_ENABLED: 'false'
      GF_ANALYTICS_CHECK_FOR_UPDATES: 'false'
      # Disable all login prompts and security features
      # !!! THIS IS ONLY SUITABLE FOR LOCAL TESTING !!!
      GF_SECURITY_DISABLE_GRAVATAR: 'true'
      GF_AUTH_DISABLE_LOGIN_FORM: 'true'
      GF_AUTH_DISABLE_SIGNOUT_MENU: 'true'
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
      GF_AUTH_ANONYMOUS_ORG_ROLE: 'Admin'
      GF_AUTH_BASIC_ENABLED: 'true'
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_RENDERING_SERVER_URL: 'http://renderer:8083/render'
      GF_RENDERING_CALLBACK_URL: 'http://grafana:3000/'
      #GF_LOG_FILTERS: 'rendering:debug'
    ports:
      - '3000:3000'
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:3000/api/health || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  prometheus:
    image: 'prom/prometheus:v2.18.1'
    container_name: 'prometheus'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.listen-address=0.0.0.0:9090'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    extra_hosts:
      - 'host.docker.internal:172.17.0.1'
    secrets:
      - nexus_admin
    volumes:
      - 'prometheus-data:/prometheus'
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro'
    ports:
      - '9090:9090'
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:9090/-/ready || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  renderer:
    image: 'grafana/grafana-image-renderer:2.0.0'
    container_name: 'renderer'
    ports:
      - '8083:8083'
    environment:
      BROWSER_TZ: 'Europe/London'
      ENABLE_METRICS: 'true'
      HTTP_PORT: '8083'
      IGNORE_HTTPS_ERROR: 'true'
      LOG_LEVEL: 'info'
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:8083/metrics || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  alertmanager-data:
  grafana-data:
  prometheus-data:
